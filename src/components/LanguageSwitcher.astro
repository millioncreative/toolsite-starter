---
import { locales, type Locale } from '../i18n';

interface Props {
  lang: Locale;
  label?: string;
}

const { lang, label } = Astro.props as Props;
const currentPath = Astro.url.pathname;
const pattern = new RegExp(`^/(${locales.join('|')})(?=/|$)`);

const buildHref = (target: Locale) => {
  const replaced = currentPath.replace(pattern, `/${target}`);
  if (replaced === currentPath) {
    return `/${target}/`;
  }
  return replaced;
};
---
<div style="display:flex;align-items:center;gap:0.5rem;font-size:0.875rem;">
  <span>{label ?? 'Language'}</span>
  <div style="display:flex;gap:0.25rem;">
    {locales.map((option) => (
      <a
        href={buildHref(option)}
        data-active={option === lang}
        style={`padding:0.25rem 0.5rem;border-radius:999px;text-decoration:none;border:1px solid rgba(148, 163, 184, 0.4);${
          option === lang ? 'background:rgba(148,163,184,0.2);font-weight:600;' : ''
        }`}
        aria-current={option === lang ? 'page' : undefined}
      >
        {option.toUpperCase()}
      </a>
    ))}
  </div>
</div>
