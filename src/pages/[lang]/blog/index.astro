---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../../i18n';
import type { Locale } from '../../../i18n/config';
import { getCollection } from 'astro:content';
import { formatDate } from '../../../utils';

export async function getStaticPaths() {
  return ['en', 'zh'].map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params;
if (!isLocale(lang)) {
  // 非法语言则回退到中文博客列表
  return Astro.redirect('/zh/blog/');
}
const locale = lang as Locale;

const dict = await getDictionary(locale);

// 只取对应语言目录下的文章
const posts = (await getCollection('blog', (entry) => entry.id.startsWith(`${locale}/`)))
  .sort((a, b) => {
    const ta = new Date(a.data.pubDate).getTime();
    const tb = new Date(b.data.pubDate).getTime();
    return tb - ta;
  });
---

<BaseLayout lang={locale} dict={dict} title={dict.nav.blog}>
  <section class="blog">
    <h1>{dict.sections.latestArticles}</h1>
    <ul>
      {posts.map((p) => {
        // p.slug 形如 "zh/getting-started" | "en/getting-started"
        const slugOnly = p.slug.split('/').slice(1).join('/');
        return (
          <li>
            <a href={`/${locale}/blog/${slugOnly}/`}>{p.data.title}</a>
            <small> · {formatDate(p.data.pubDate, locale)}</small>
          </li>
        );
      })}
    </ul>
  </section>
</BaseLayout>
