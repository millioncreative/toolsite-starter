---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../../i18n';
import type { Locale } from '../../../i18n/config';
import { getEntryBySlug, getCollection } from 'astro:content';
import { formatDate } from '../../../utils/locale';

export const prerender = true;

// 只在构建期生成 en/zh 的所有 slug 路径
export async function getStaticPaths() {
  const all = await getCollection('blog');
  const locales = ['en', 'zh'] as const;

  return locales.flatMap((lang) =>
    all
      .filter((e) => e.id.endsWith(`.${lang}`))
      .map(({ id }) => {
        // e.g. "getting-started.en" -> "getting-started"
        const slug = id.replace(/\.(en|zh)$/i, '');
        return { params: { lang, slug } };
      }),
  );
}

const { lang, slug } = Astro.params as { lang: Locale; slug: string };

if (!isLocale(lang)) {
  // 非法语言时统一回退中文
  return Astro.redirect('/zh/blog/');
}

const locale = lang;
const dict = await getDictionary(locale);

// 读取当前语言的文章
const entry = await getEntryBySlug('blog', `${slug}.${locale}`);
if (!entry) {
  throw new Error(`Blog not found: ${slug}.${locale}`);
}

const { Content, data } = entry;
const dateLocale = locale === 'zh' ? 'zh-CN' : 'en-US';
---

<BaseLayout lang={locale} dict={dict} title={data.title} description={data.description}>
  <article class="prose mx-auto">
    <h1>{data.title}</h1>
    <p>
      <time datetime={data.pubDate.toISOString()}>
        {formatDate(data.pubDate, dateLocale)}
      </time>
    </p>
    <Content />
  </article>
</BaseLayout>
