---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../../i18n';
import type { Locale } from '../../../i18n/config';
import { getCollection } from 'astro:content';

// 根据现有内容生成 /en|zh/blog/:slug
export async function getStaticPaths() {
  const all = await getCollection('blog');
  const paths = all.flatMap((entry) => {
    const [lang, ...rest] = entry.id.split('/'); // 形如 "en/getting-started"
    if (!['en', 'zh'].includes(lang)) return [];
    const slug = rest.join('/');
    return [{ params: { lang, slug } }];
  });
  return paths;
}

const { lang, slug } = Astro.params;

if (!isLocale(lang)) {
  return Astro.redirect('/zh/blog/');
}

const locale = lang as Locale;
const dict = await getDictionary(locale);

// 找到当前语言对应的文章
const candidates = await getCollection('blog', (entry) =>
  entry.id.startsWith(`${locale}/`)
);

// 兼容子目录的 slug（如 zh/tutorials/intro）
const post =
  candidates.find((e) => e.slug === `${locale}/${slug}`) ||
  candidates.find((e) => e.slug.endsWith(`/${slug}`));

if (!post) {
  throw new Error(`Blog post not found: lang=${locale}, slug=${slug}`);
}

// 关键点：从 render() 结果里拿 Content，而不是 import { Content } from 'astro:content'
const { Content, headings } = await post.render();
---
<BaseLayout lang={locale} dict={dict} title={post.data.title ?? dict.nav.blog}>
  <article class="prose prose-slate mx-auto">
    <header>
      <h1>{post.data.title}</h1>
      {post.data.pubDate && (
        <p>
          <time datetime={post.data.pubDate.toISOString()}>
            {post.data.pubDate.toDateString()}
          </time>
        </p>
      )}
    </header>

    <Content />

    {headings?.length ? (
      <aside>
        <h2>{dict.blog?.toc ?? 'On this page'}</h2>
        <ul>
          {headings.map((h) => (
            <li>
              <a href={`#${h.slug}`}>{h.text}</a>
            </li>
          ))}
        </ul>
      </aside>
    ) : null}
  </article>
</BaseLayout>
