---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getDictionary, isLocale } from '../../../i18n';
import type { Locale } from '../../../i18n/config';
import { Content } from 'astro:content';

export async function getStaticPaths() {
  // 假设集合名为 'blog'，并且文件位于 src/content/blog/en/*.md、src/content/blog/zh/*.md
  const posts = await getCollection('blog');

  // 文章的 entry.slug 形如 'en/getting-started' 或 'zh/xxx'
  return posts.map((entry) => {
    const [lang, ...rest] = entry.slug.split('/');
    const slug = rest.join('/'); // 正常应只剩一段

    return {
      params: { lang, slug },
      props: { entry },
    };
  });
}

type Props = { entry: CollectionEntry<'blog'> };

const { entry } = Astro.props as Props;
const { lang = 'zh', slug = '' } = Astro.params;

// 语言兜底与校验
if (!isLocale(lang)) {
  // 不合法语言，重定向到默认中文博客列表
  return Astro.redirect('/zh/blog/');
}

const locale = lang as Locale;
const dict = await getDictionary(locale);

const title = entry.data.title ?? dict.meta.defaultTitle;
const description = entry.data.description ?? dict.meta.description;

// 计算 canonical（包含语言段）
const site = Astro.site ?? new URL(Astro.url.origin);
const canonical = new URL(`/${locale}/blog/${slug}`, site).toString();
---

<BaseLayout lang={locale} dict={dict} title={title} description={description} canonical={canonical}>
  <article class="prose prose-slate max-w-none">
    <h1>{title}</h1>
    <p><small>{entry.data.date?.toISOString().slice(0,10)}</small></p>
    <Content value={entry.body} />
  </article>
</BaseLayout>
