---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../../../i18n';
import type { Locale } from '../../../../i18n/config';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => {
    const slug = post.slug.split('/').at(-1) || post.slug;
    return {
      params: {
        lang: post.data.lang,
        slug
      }
    };
  });
}

const { lang, slug } = Astro.params;

if (!isLocale(lang)) {
  return Astro.redirect('/zh/blog/');
}

const locale = lang as Locale;
const posts = await getCollection('blog', ({ id }) => id.startsWith(`${locale}/`));
const entry = posts.find((post) => post.slug.split('/').at(-1) === slug);

if (!entry) {
  return Astro.redirect(`/${locale}/blog/`);
}

const post = entry;

const dict = await getDictionary(locale);
const dateLocale = locale === 'zh' ? 'zh-CN' : 'en-US';
const published = post.data.published.toLocaleDateString(dateLocale);
---
<BaseLayout lang={locale} dict={dict} title={post.data.title} description={post.data.description}>
  <article class="post">
    <header class="post__header">
      <p class="post__meta">{dict.blog.publishedOn} {published}</p>
      <h1>{post.data.title}</h1>
      <p class="post__description">{post.data.description}</p>
    </header>
    <section class="post__content">
      <post.Content />
    </section>
  </article>
</BaseLayout>
<style>
  .post {
    display: grid;
    gap: 2rem;
  }

  .post__meta {
    color: color-mix(in srgb, currentColor 65%, transparent);
    font-size: 0.875rem;
  }

  .post__content :global(p) {
    line-height: 1.8;
  }

  .post__content :global(h2) {
    margin-top: 2rem;
  }
</style>
