---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../../i18n';
import type { Locale } from '../../../i18n/config';
import { getCollection, getEntry } from 'astro:content';
import { formatDate } from '../../../utils';

// 生成所有语言+slug 的静态路径
export async function getStaticPaths() {
  const posts = await getCollection('blog'); // 形如 id: "zh/getting-started"
  const langs: Locale[] = ['en', 'zh'];

  return langs.flatMap((lang) =>
    posts
      .filter((p) => p.id.startsWith(`${lang}/`))
      .map((p) => {
        const slug = p.slug.split('/').slice(1).join('/'); // "getting-started"
        return { params: { lang, slug } };
      })
  );
}

const { lang, slug } = Astro.params;
if (!isLocale(lang) || !slug) {
  return Astro.redirect('/zh/blog/');
}
const locale = lang as Locale;

const dict = await getDictionary(locale);

// 取得当前文章（集合名 blog，id 形如 "zh/getting-started"）
const entry = await getEntry('blog', `${locale}/${slug}`);
if (!entry) {
  return Astro.redirect(`/${locale}/blog/`);
}

// 通过 render() 获取 Content 组件（不要直接从 'astro:content' 导入 Content）
const rendered = await entry.render();
const { Content } = rendered;
---

<BaseLayout lang={locale} dict={dict} title={entry.data.title} description={entry.data.description}>
  <article>
    <h1>{entry.data.title}</h1>
    <p><small>{formatDate(entry.data.pubDate, locale)}</small></p>
    <Content />
  </article>
</BaseLayout>
