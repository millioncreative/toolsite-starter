---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getDictionary, isLocale } from '../../i18n';
import type { Locale } from '../../i18n/config';
import { getCollection } from 'astro:content';

const { lang } = Astro.params;

if (!isLocale(lang)) {
  return Astro.redirect('/zh/');
}

const locale = lang as Locale;
const dict = await getDictionary(locale);
const dateLocale = locale === 'zh' ? 'zh-CN' : 'en-US';
const posts = (await getCollection('blog', (entry) => entry.data.lang === locale))
  .sort((a, b) => b.data.published.getTime() - a.data.published.getTime())
  .slice(0, 3);
---
<BaseLayout lang={locale} dict={dict}>
  <section class="hero">
    <h1>{dict.hero.title}</h1>
    <p>{dict.hero.subtitle}</p>
    <a href={`/${locale}/tools/`} class="hero__cta">{dict.hero.cta}</a>
  </section>

  <section>
    <div class="section-heading">
      <h2>{dict.sections.featuredTools}</h2>
      <a href={`/${locale}/tools/`}>{dict.nav.tools}</a>
    </div>
    <div class="tool-grid">
      {dict.toolCards.map((tool) => (
        <article class="tool-card" id={tool.slug}>
          <h3>{tool.title}</h3>
          <p>{tool.description}</p>
          <a class="tool-card__cta" href={`/${locale}/tools/#${tool.slug}`}>{tool.cta}</a>
        </article>
      ))}
    </div>
  </section>

  <section>
    <div class="section-heading">
      <h2>{dict.sections.latestArticles}</h2>
      <a href={`/${locale}/blog/`}>{dict.nav.blog}</a>
    </div>
    <div class="blog-grid">
      {posts.map((post) => (
        <article class="blog-card">
          <h3>{post.data.title}</h3>
          <p>{post.data.description}</p>
          <p class="blog-card__meta">{dict.blog.publishedOn} {post.data.published.toLocaleDateString(dateLocale)}</p>
          <a href={`/${locale}/blog/${post.data.slug}/`} class="blog-card__cta">{dict.blog.readMore}</a>
        </article>
      ))}
    </div>
  </section>
</BaseLayout>
<style>
  .hero {
    display: grid;
    gap: 1rem;
    padding: 4rem 0 2rem;
  }

  .hero__cta {
    align-self: flex-start;
    padding: 0.75rem 1.5rem;
    border-radius: 999px;
    background: #2563eb;
    color: white;
    font-weight: 600;
    text-decoration: none;
  }

  .section-heading {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    gap: 1rem;
  }

  .tool-grid,
  .blog-grid {
    display: grid;
    gap: 1.5rem;
  }

  @media (min-width: 720px) {
    .tool-grid,
    .blog-grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  .tool-card,
  .blog-card {
    background: white;
    border-radius: 1rem;
    padding: 1.5rem;
    box-shadow: 0 1rem 2rem rgba(15, 23, 42, 0.08);
  }

  .tool-card__cta,
  .blog-card__cta {
    display: inline-block;
    margin-top: 1rem;
    font-weight: 600;
  }

  .blog-card__meta {
    color: color-mix(in srgb, currentColor 65%, transparent);
    font-size: 0.875rem;
  }
</style>
